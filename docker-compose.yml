version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "transactions:3:1, fraud_alerts:3:1, high_value_transactions:3:1"
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  db-sql:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: suspicious_emails
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  processor:
    build: ./processor
    container_name: stream-processor
    depends_on:
      kafka:
        condition: service_healthy

  explosive-consumer:
    build: ./explosive-consumer
    container_name: explosive-consumer
    depends_on:
      kafka:
        condition: service_healthy
      db-sql:
        condition: service_healthy

  hostage-consumer:
    build: ./hostage-consumer
    container_name: hostage-consumer
    depends_on:
      kafka:
        condition: service_healthy
      db-sql:
          condition: service_healthy

  all_message-consumer:
    build: ./all_message-consumer
    container_name: all_message-consumer
    depends_on:
      kafka:
        condition: service_healthy
      mongodb:
        condition: service_healthy

volumes:
  db_data:
  mongo_data:
